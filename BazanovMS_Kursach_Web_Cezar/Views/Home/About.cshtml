@{
    ViewBag.Title = "About";
}

<div class="jumbotron">
    <h1>О приложении</h1>
    <h3>@ViewBag.Message</h3>
</div>
<div class="about-page">
    <h1> Курсовой проект(Шифр Цезаря)</h1>
    <p> Меня зовут Базанов Максим Сергеевич.</p>
    <p> Я учусь в Университете ИТМО на первом курсе магистратуры факультета БИТ. Изучаю C# и стек технологий .Net. Знаком с сетевыми технологиями, реляционными БД... Представляю свой курсовой проект по курсу "Программирование на C#".</p>
    <h2>Задание на курсовой проект</h2>
    <h3>Минимальный результат:</h3>
    <ol>
        <li>Создайте программу, в которую можно передать файл с определенной информацией. Входящий и исходящий формат файла .txt. Известно, что информация, находящаяся в файле – зашифрована методом простой перестановки с постоянным шагом сдвига. Знаки препинания, и прочие элементы не относящиеся к алфавиту сообщения не сдвигаются. В сообщении используется десятичная система счисления и русский алфавит. </li>
        <li>Программа должна осуществлять дешифровку информации, находящейся в файле и вывод её на экран пользователя.</li>
        <li>Программа должна предоставлять возможность сохранить дешифрованную информацию в отдельный файл, с указанием его названия и директории для сохранения.</li>
        <li>Программа должна обладать интерфейсом для взаимодействия с пользователем, а также меню для управления функциональными возможностями программы.</li>
        <li>Программа должна являться WPF/UWF приложением.</li>
    </ol>
    <h3>Ожидаемый результат:</h3>
    <p>В дополнение к минимальному результату:</p>
    <ol>
        <li>Программа должна предоставлять возможность для зашифровывания информации, введенной пользователем с клавиатуры, а также возможность указать направление и желаемый шаг сдвига.</li>
        <li>Результат шифрования должен быть сохранен в отдельный файл, с указанием его названия и директории для сохранения.</li>
        <li>Основной функционал должен быть покрыт автоматическими Unit тестами, с использованием стандартных возможностей Unit Testing Framework.</li>
    </ol>
    <h3>Продвинутый результат:</h3>
    <p> В дополнение к ожидаемому результату:</p>
    <ol>
        <li>Программа должна предоставлять возможность для считывания незашифрованной информации из файла, формат файла .docx.</li>
        <li>Предоставлять возможность для зашифровывания информации в нем, с возможностью указания направления и желаемого шага сдвига.</li>
        <li>Результат шифрования должен быть сохранен в отдельный файл, с указанием его названия и директории для сохранения, формат файла .docx.</li>
        <li>Программа должна быть реализована в виде web-приложения с использованием стека технологий ASP.NET.</li>
    </ol>
    <h2>Результат выполненного курсового проекта.О программе</h2>
    <p>Полученная программа соответствует продвинутому результату выполнения курсового проекта, так как удовлетворяет всем его условиям.</p>
    <p>Проект представляет собой web-приложение, реализованное с помощью ASP.NET MVC. Имеет адаптивный дизайн, реализованный с помощью фрейворка Bootstrap</p>
    <p> Приложение состоит из трех страниц:  "Дешифратор", "О приложении", "Контакты" и мастер страницы, сверху которой присутствует навигационная панель, а снизу текущие дата и время сервера.</p>
    <p>На странице "О приложении" можно найти описание самого приложения.</p>
    <p>На странице "Контакты" можно узнать основные контакты создателя приложения.</p>
    <p>На странице "Дешифратор" "находится" сам дешифратор.В зависимости он размеров экрана, два основных блока будут либо слева и справа, либо сверху и снизу.</p>
    <p>Первый блок предназначен для ввода информации для расшифровки/зашифровки с помощью "Шифра Цезаря".</p>
    <ul>
        <li>Текст можно задать вручную, введя его в текстовое поле, или загрузить файл txt/docx с чистым текстом с помощью кнопок ниже: сначала с помощью кнопки "Choose File" выбрать нужный файл, а затем загрузить его с помощью кнопки "Загрузить". После чего текст из файла появится в текстовом поле. </li>
        <li>Процесс расшифровки может проводится автоматически, путем установления галочки рядом с пометкой "Автоматически". После этого начнется процесс расшифровки, по результатам которого будет выведен текст во второе текстовом поле, а  величина шага сдвига (ключа), который потребовался для расшифровки файла будет выведен справа в небольшом окошечке.</li>
        <li>Процесс ручной расшифровки ( он же процесс зашифровки) может проводится путем задания шага сдвига (ключа) справа в небольшом окошечке. Чтобы процесс был происходил корректно, требуется отсутствие галочки рядом с пометкой "Автоматически". Результат будет выведен во второе текстовом поле.</li>
    </ul>
    <p>Второй блок предназначен для вывода расшифрованной/зашифрованной информации. Он также позволяет сохранить информацию в файл с нужным разрешением txt/docx.</p>
    <p>Чтобы выйти из приложения достаточно закрыть страничку в браузере.</p>
    <p>В папке Library также содержатся файлы "Result.txt" и Result.docx, которые можно использовать для проверки функционала</p>
    <h4>Отдельно про алгоритм автоматической расшифровки.</h4>
    <p> Он реализован путем итеративного расшифрования требуемого для расшифровки файла со всеми возможными шагами сдвигами ( лючами) и поиск в "расшифрованном" тексте слов из словаря word-lib ( находится в папке Library). Каждое найденное слово вконкретном зашифрованном тексте добавляет ему "плюсик в карму". Затем по каждом тексту сравниваются "плюсики", и какой текст наберет больше, тот и оказывается условно верно расшифрованным. Метод, реализующий этот алгоритм возвращает найденный (условно верный) шаг сдвига (ключ).</p>
    <p> Стоит сказать, что автоматическая расшифровка работает не всегда корретно, в виду неидеальности алгоритма, однако большие тексты расшифровывает с точностью, стремящейся к 100%.</p>
    <p> Стоит сказать, что автоматическая расшифровка работает не всегда корретно, в виду неидеальности алгоритма, однако большие тексты расшифровывает с точностью, стремящейся к 100%.</p>
    <p>Каждый положительнй шаг сдвига имеет своего брата-близнеца из отрицательных и наоборот. Однако они не равны по модулю. Отрицательный шаг сдвига получается с помощью выражения: шаг_положительный-33. И наоборот: шаг_отрицальный+33.</p>
    <p>Зная код зашифровки, можно узнать код расшифровки и наоборот. Это его брат-близнец взятый с обратным знаком ( умноженный на -1).</p>
    <h2>Реализованные функциональный возможности</h2>
    <ol>
        <li>В приложение ( на сервер) передается txt/docx файл, содержащий зашифровнную(подлежащую к зашифровке) информацию  методом простой перестановки с постоянным шагом сдвига.</li>
        <li>Расшифровка/зашифровка информации, содержащейся в файле.</li>
        <li>Расшифровка/зашифровка информации, введеднной с клавиатуры.</li>
        <li>Сохранение расшифрованную/зашифрованную информацию в файле txt/docx и его загрузка с сервера на клиент.</li>
        <li>Указание автоматическоого или ручного шифрования с указываемым шагом сдвига (ключом).</li>
        <li>Созданы тесты для основного функционала. Программа успешно с ними справляется.</li>
    </ol>

    <h1>Курсовой проект(Шифр Цезаря)</h1>

</div>
